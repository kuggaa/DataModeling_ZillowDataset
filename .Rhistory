vector <- c(1,2,3,4,5,6)
print (vector)
is.vector(vect)
vect <- c(1,2,3,4,5,6)
print (vect)
is.vector(vect)
vect <- c(1,2,3,4,5,6,'a')
print (vect)
is.vector(vect)
is.type(vect)
typeof(vect)
is.atomic(vect)
is.list(vect)
vect <- c(1,2,3,4,5,6L,'a')
print (vect)
vect <- c(1L,2L,3L,4L,5L,6L)
print (vect)
is.vector(vect)
typeof(vect)
is.atomic(vect)
is.list(vect)
vect <- c(1L,NA,3L,4L,5L,6L)
print (vect)
is.vector(vect)
typeof(vect)
vect <- c(1L,na,3L,4L,5L,6L)
vect <- c(1L,NA,3L,4L,5L,6L)
print (vect)
is.vector(vect)
typeof(vect)
is.atomic(vect)
vect <- c(1L,NA_real_,3L,4L,5L,6L)
print (vect)
is.vector(vect)
typeof(vect)
is.atomic(vect)
vect <- c(1L,NA_real_,3L,4L,5L,6L)
print (vect)
is.vector(vect)
typeof(vect)
is.atomic(vect)
is.list(vect)
is.double(vect)
is.integer(vect)
is.character(vect)
is.numeric(vect)
test <- c(f,t,f)
test <- c(F,T,F)
print(test)
as.number(test)
print(as.number(test))
print(as.numeric(test))
as.numeric(test)
is.logical(vect)
as.logical(test)
as.character(test)
rm(list=ls(all=TRUE))
simn  <- 1000 #repetitions
b0    <- 3
b1    <- 2
sig   <- 1.2
xmean <- 4
xsd   <- 2
for (ns in 1:5) {
if (ns == 1) {n <- 10}
if (ns == 2) {n <- 25}
if (ns == 3) {n <- 50}
if (ns == 4) {n <- 100}
if (ns == 5) {n <- 250}
coefs           <- rep(0,simn)
for (isim in 1:simn) {
# create random data
x             <- rnorm(n,mean=xmean,sd=xsd)
e             <- rnorm(n,mean=0,sd=sig)
y             <- b0 + b1*x + e
# estimate the ols coefficients
bhat          <- coef(lm(y~x))
coefs[isim]   <- bhat[2]
}
plot(density(coefs),xlim=c(1.5,2.5))
if(ns!=5)invisible(readline(prompt="Press [enter] to continue"))
}
vect <- c(1.1, 2.2, 3.3)
print(vect)
typeof(vect)
varList <- list(1,2,3,4,5,6)
print(varList)
varList <- list(a,b,c,d,e)
varList <- list('a','b','c','d','e')
print(varList)
typeof(varList)
is.character(varList)
is.vector(varList)
is.atomic(varList)
is.character(varList)
var2 <- list(1:4)
print(var2)
var2 <- list(1:40,2)
print(var2)
var2 <- list(1:4)
print(var2)
var2 <- List(1:4)
var2 <- List(1:4) lprint(var2)
var2 <- ist(1:4)
var2 <- list(1:4)
print(var2)
x <- list(1:3, "a", c(TRUE, FALSE, TRUE), c(2.3, 5.9))
print(x)
is.recursive(x)
x <- list(list(list(list())))
str(x)
print(x)
x <- list(list(1,2),c(3,4))
y <- c(list(1,2),c(3,4))
str(x)
str(y)
is.list(y)
is.atomic(y)
unlist(Y)
unlist(y)
is.atomic(unlist(y))
str(x)
x <- c("a", 1)
str(x)
typeof(x)
x <- c(list(1), "a")
str(x)
typeof(x)
print(x)
print(1="1")
print(1 = "1")
str(1 = "1")
isTRUE(1='1')
isTRUE(1=='1')
rm(list=ls(all=TRUE))
library(data.table)
context    <- fread('WAGE1.csv')
context <- fread("WAGE1.csv")
context <- fread("WAGE1.csv")
context <- fread("BWGHT - Copy.csv")
context <- fread("BWGHT_Copy.csv")
rm(list=ls(all=TRUE))
library(data.table)
context1    <- fread('WAGE1.csv')
context1 <- fread("WAGE1.csv")
install.packages(rpart)
install.packages("rpart")
install.packages("tree")
install.packages("party")
install.packages("evtree")
rm(list = ls())
library(data.table)
library(tree)
library(party)
library(evtree)
library(rpart)
rm(list=ls(all=TRUE))
setwd('/Users/HPHP/Dropbox/Masters/BUAN_6320_DB_Foundations/Project')
library(dplyr)
library(ggplot2)
data <- read.csv('price,csv')
getwd()
data <- read.csv('price.csv')
summary(data)
